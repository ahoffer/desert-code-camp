In 2008, a new specification called JAX-RS was defined to simplify RESTful service implementation.
JAX-RS is a framework that focuses on applying Java annotations to plain Java objects.
It has annotations to bind specific URI patterns and HTTP operations to individual
methods of your Java class. It has parameter injection annotations so that you can easily
pull in information from the HTTP request. It has message body readers and writers
that allow you to decouple data format marshalling and unmarshalling from your Java
data objects. It has exception mappers that can map an application-thrown exception
to an HTTP response code and message. Finally, it has some nice facilities for HTTP
content negotiation.

In an Enterprise Java application, the  Customer class would usually be a Java Persistence
(JPA) Entity bean and would be used to interact with a relational database. It could
also be annotated with JAXB annotations that allow you to map a Java class directly to
XML. To keep our example simple,  Customer will be just a plain Java object and stored
in memory. In Chapter 6, I’ll show how you can use JAXB with JAX-RS to make trans-
lating between your customer’s data format (XML) and your  Customer objects easier.



Customer
Order
    put/post/get/delete

XML or JSON.
Enable HTTPS.
Enable OAuth 2.

RELATED LIBRARIES
HttCommons (Apache Java library for HTTP related functionality. HTTPClient to send requests.)
javax.ws.rs (Base Java:  A collection of built-in priority constants for the JAX-RS components
Jackson (Java library to serialize Java objects to JSON and vice versa. )
Jayway (Company)

PROGRESSION
1. Get XML working
2. Replace strings with string constants from libraries (HTTPHeaders, MediaTypes)
3. Get JSON working (explains mappers/serializers/provider terminology). XML/JSON/... <-> Java objects
4. Get Uber JAR working (edit POM file).
5. Show AWS EC2 micro instance.
6. Copy with SCP (can I make it kill the old server and start the new one?)
7. Open port 80 on ec2 (or port 9000 or whatever)


VULTR SERVER INSTANCE
IP: 104.238.147.53
USER: root

scp -i ~/.ssh/id_desertcodecamp ~/repos/desert-code-camp/server/target/server-1.0-SNAPSHOT.jar root@104.238.147.53:/root/server

ssh -i ~/.ssh/id_desertcodecamp root@104.238.147.53

curl -X GET http://localhost:9000/customerservice/customer/123/
curl -X GET http://104.238.147.53:9000/customer/123/
